// <auto-generated />
using System;
using DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(ProjeContext))]
    [Migration("20230608160544_enesMig1")]
    partial class enesMig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Entities.Departman", b =>
                {
                    b.Property<int>("DepartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmanId"), 1L, 1);

                    b.Property<string>("DepartmanAdi")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("DepartmanId");

                    b.ToTable("Departmanlar");

                    b.HasData(
                        new
                        {
                            DepartmanId = 1,
                            DepartmanAdi = "Muhasebe"
                        },
                        new
                        {
                            DepartmanId = 2,
                            DepartmanAdi = "İnsan Kaynakları"
                        },
                        new
                        {
                            DepartmanId = 3,
                            DepartmanAdi = "Finans"
                        });
                });

            modelBuilder.Entity("EntityLayer.Entities.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"), 1L, 1);

                    b.Property<DateTime?>("GirisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("YetkiliId")
                        .HasColumnType("int");

                    b.HasKey("LoginId");

                    b.HasIndex("YetkiliId");

                    b.ToTable("Loginler");

                    b.HasData(
                        new
                        {
                            LoginId = 1,
                            GirisTarihi = new DateTime(2023, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YetkiliId = 1
                        },
                        new
                        {
                            LoginId = 2,
                            GirisTarihi = new DateTime(2023, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YetkiliId = 1
                        });
                });

            modelBuilder.Entity("EntityLayer.Entities.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonelId");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("TC")
                        .IsUnique();

                    b.ToTable("Personeller");

                    b.HasData(
                        new
                        {
                            PersonelId = 1,
                            Ad = "Ahmet",
                            Adres = "Kadıköy, İstanbul",
                            Cinsiyet = 2,
                            DepartmanId = 1,
                            DogumTarihi = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "ahmet@gmail.com",
                            Soyad = "Güler",
                            TC = "11111111111",
                            Telefon = "05554443322"
                        },
                        new
                        {
                            PersonelId = 2,
                            Ad = "Ayşe",
                            Cinsiyet = 1,
                            DepartmanId = 3,
                            DogumTarihi = new DateTime(1996, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Soyad = "Yılmaz",
                            TC = "22222222222"
                        });
                });

            modelBuilder.Entity("EntityLayer.Entities.Yetkili", b =>
                {
                    b.Property<int>("YetkiliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YetkiliId"), 1L, 1);

                    b.Property<int>("AktifDurum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("HataliGiris")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YetkiDurum")
                        .HasColumnType("int");

                    b.HasKey("YetkiliId");

                    b.ToTable("Yetkililer");

                    b.HasData(
                        new
                        {
                            YetkiliId = 1,
                            AktifDurum = 0,
                            HataliGiris = 0,
                            KullaniciAdi = "muhasebe@123",
                            Sifre = "1234",
                            YetkiDurum = 2
                        },
                        new
                        {
                            YetkiliId = 2,
                            AktifDurum = 0,
                            HataliGiris = 0,
                            KullaniciAdi = "admin@admin",
                            Sifre = "admin@123",
                            YetkiDurum = 1
                        });
                });

            modelBuilder.Entity("EntityLayer.Entities.Login", b =>
                {
                    b.HasOne("EntityLayer.Entities.Yetkili", "Yetkili")
                        .WithMany()
                        .HasForeignKey("YetkiliId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yetkili");
                });

            modelBuilder.Entity("EntityLayer.Entities.Personel", b =>
                {
                    b.HasOne("EntityLayer.Entities.Departman", "Departman")
                        .WithMany()
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departman");
                });
#pragma warning restore 612, 618
        }
    }
}
